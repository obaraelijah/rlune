[package]
name = "rlune"
version = "0.1.0"
edition = "2021"
authors = ["Elijah Samson <git@obaraelijah.dev>"]
license = "MPL-2.0"
description = "Core-component for the rlune web-framework"

[dependencies]
# Webserver
axum = { workspace = true, features = ["tokio", "http1"] }

# Core
rlune-core = { version = "~0.1", path = "../rlune-core" }

# Database
rorm = { workspace = true }

# Contrib modules
rlune-contrib-auth = { version = "~0.1", path = "../contrib/rlune-contrib-auth", optional = true }
rlune-contrib-oauth = { version = "~0.1", path = "../contrib/rlune-contrib-oauth", optional = true }

# Error handling
thiserror = { version = "~2" }

# Async runtime
tokio = { version = ">=1.23.1", features = ["net"] }

# The basic async traits (Future, Stream, AsyncRead, ...) and extensions for them
futures-lite = { version = "~2", default-features = false, features = ["alloc"] }

# Tracing
tracing = { version = "~0.1" }
tracing-subscriber = { version = "~0.3", features = ["env-filter"] }

rlune-macros = { version = "0.2.0", path = "../rlune-macros" }
openapiv3 = { version = "~2", optional = true }
serde_json = { version = "~1", optional = true }

# Unix signal handling
signal-hook = { version = "~0.3", optional = true }
signal-hook-tokio = { version = "~0.3", features = ["futures-v0_3"], optional = true }

[features]
default = [
    "rorm-default",
    "openapi",
    "graceful-shutdown",
    "panic-hook",
]
contrib = [
    "dep:rlune-contrib-auth",
    "dep:rlune-contrib-oauth",
]
openapi = [
    "dep:openapiv3",
    "serde_json"
]

# Enables a graceful shutdown upon receiving a termination signal
graceful-shutdown = ["dep:signal-hook", "dep:signal-hook-tokio"]

# Sets the global panic hook to output tracing events instead of writing to stdoutAdd 
panic-hook = []

# ------------- #
# Rorm features #
# ------------- #

# Collection of all rorm features rlune considers "default"
rorm-default = [
    "rorm-postgres-only",
    "rorm-time",
    "rorm-uuid",
    "rorm-url",
    "rorm-schemars",
    "rorm-cli",
]

# Enables postgres specific features, disabling the other databases
rorm-postgres-only = ["rorm/postgres-only"]

# Enables all databases at the cost of postgres specific features
rorm-all-drivers = ["rorm/all-drivers"]

# Implements FieldType for chrono's types
rorm-chrono = ["rorm/chrono"]

# Implements FieldType for time's types
rorm-time = ["rorm/time"]

# Implements FieldType for Uuid type
rorm-uuid = ["rorm/uuid"]

# Implements FieldType for Url type
rorm-url = ["rorm/url"]

# Implements ToSchema for some rorm-specific types
rorm-utoipa = ["rorm/utoipa"]

# Implements JsonSchema for some rorm-specific types
rorm-schemars = ["rorm/schemars"]

# Adds MsgPack type to store arbitrary serde compatible data using the message pack format
rorm-msgpack = ["rorm/msgpack"]

# Re-exports rorm's cli i.e. the command to generate and apply migrations
rorm-cli = ["rorm/cli"]

# Enables connecting to the database over tls support using rustls
rorm-rustls = ["rorm/rustls"]

# Enables connecting to the database over tls support using native-tls
rorm-native-tls = ["rorm/native-tls"]